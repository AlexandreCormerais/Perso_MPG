2+2
fr
smp.c <- read.csv2('/Users/Alexandre/Google Drive/MOOC/R - FUN/smp1.csv')
library(prettyR)
describe(smp.c)
describe(smp.c$age)
install.packages("binom")
smp.c <- read.csv2('/Users/Alexandre/Google Drive/MOOC/R - FUN/smp1.csv')
#presentation du fichier
str(smp.c)
smp.c
#Representation d'une variable qualitative, ou discrete
#regroupement des données par valeur
table(smp.c$prof)
str(smp.c)
smp.c
smp <- read.csv2('/Users/Alexandre/Google Drive/MOOC/R - FUN/smp2.csv')
## ------------------------------------------------------------------------
ls()
dim(smp)
names(smp)
## ------------------------------------------------------------------------
help(dim)
## ------------------------------------------------------------------------
str(smp)
## ------------------------------------------------------------------------
summary(smp)
## ------------------------------------------------------------------------
smp$age[1]
smp$age[c(1,2)]
smp$age[1:2]
smp$age[c(1,3)]
## ------------------------------------------------------------------------
smp$age[1:10]
smp$age[c(1,10)]
## ------------------------------------------------------------------------
head(smp$age)
head(smp$age, n=10)
## ------------------------------------------------------------------------
head(smp$age, 10)
## ------------------------------------------------------------------------
summary(smp$age)
## ------------------------------------------------------------------------
min(smp$age)
## ------------------------------------------------------------------------
min(smp$age, na.rm=TRUE)
## ------------------------------------------------------------------------
range(smp$age, na.rm=TRUE)
## ------------------------------------------------------------------------
head(smp$abus)
unique(smp$abus)
## ------------------------------------------------------------------------
length(smp$abus)
nrow(smp)
table(smp$abus)
sum(table(smp$abus))
## ------------------------------------------------------------------------
table(smp$abus, useNA="always")
## ------------------------------------------------------------------------
sum(is.na(smp$abus))
sum(!is.na(smp$abus))
sum(complete.cases(smp$abus))
## ------------------------------------------------------------------------
head(factor(smp$abus))
head(factor(smp$abus, labels=c("Non", "Oui")))
## ------------------------------------------------------------------------
abus <- factor(smp$abus, labels=c("Non", "Oui"))
table(abus)
head(relevel(abus, ref="Oui"))
## ------------------------------------------------------------------------
table(smp$n.enfant, useNA="always")
head(smp$n.enfant > 4)
table(smp$n.enfant > 4)
## ------------------------------------------------------------------------
smp$n.enfant.cat <- factor(smp$n.enfant)
levels(smp$n.enfant.cat)[6:13] <- "5+"
nlevels(smp$n.enfant.cat)
table(smp$n.enfant.cat)
## ------------------------------------------------------------------------
table(smp$age)
head(smp$age)
summary(smp$age)
help(cut)
smp$age.cat <- cut(smp$age, breaks=c(19, 28, 37, 48, 83), include.lowest=TRUE)
table(smp$age.cat)
## ------------------------------------------------------------------------
save(smp, file="smp_v1.rda")
dir(pattern="rda")
##
## Lab 2
##
smp <- read.csv2('/Users/Alexandre/Google Drive/MOOC/R - FUN/smp2.csv')
## ------------------------------------------------------------------------
library(MASS)
## ------------------------------------------------------------------------
head(smp$age)
## ------------------------------------------------------------------------
smp[,1]
smp[,"age"]
## ------------------------------------------------------------------------
head(smp$prof == "agriculteur")
table(smp$prof == "agriculteur")
## ------------------------------------------------------------------------
which(smp$prof == "agriculteur")
## ------------------------------------------------------------------------
smp$age[which(smp$prof == "agriculteur")]
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur", age)
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur", 1:5)
names(smp)[1:5]
subseht(smp, prof == "agriculteur", c(age, prof, duree, discip, n.enfant))
subset(smp, prof == "agriculteur", c(age, prof, duree, discip, n.enfant))
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur" & n.enfant > 2, c(age, prof, duree, discip, n.enfant))
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur" & n.enfant > 2 & complete.cases(duree), c(age, prof, duree, discip, n.enfant))
## ------------------------------------------------------------------------
tab <- table(smp$n.enfant.cat)
## ------------------------------------------------------------------------
sum(tab)
tab / sum(tab)
## ------------------------------------------------------------------------
prop.table(tab)
tab <- table(smp$n.enfant.cat)
## ------------------------------------------------------------------------
sum(tab)
tab / sum(tab)
## ------------------------------------------------------------------------
prop.table(tab)
## ------------------------------------------------------------------------
round(prop.table(tab), 3)
## ------------------------------------------------------------------------
round(prop.table(tab)*100, 1)
## ------------------------------------------------------------------------
barplot(prop.table(tab) * 100, ylab="Proportion", col="cornflowerblue", border=NA, ylim=c(0, 30), las=1)
## ------------------------------------------------------------------------
head(smp$age)
## ------------------------------------------------------------------------
smp[,1]
smp[,"age"]
## ------------------------------------------------------------------------
head(smp$prof == "agriculteur")
table(smp$prof == "agriculteur")
## ------------------------------------------------------------------------
which(smp$prof == "agriculteur")
## ------------------------------------------------------------------------
smp$age[which(smp$prof == "agriculteur")]
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur", age)
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur", 1:5)
names(smp)[1:5]
subset(smp, prof == "agriculteur", c(age, prof, duree, discip, n.enfant))
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur" & n.enfant > 2, c(age, prof, duree, discip, n.enfant))
## ------------------------------------------------------------------------
subset(smp, prof == "agriculteur" & n.enfant > 2 & complete.cases(duree), c(age, prof, duree, discip, n.enfant))
## ------------------------------------------------------------------------
tab <- table(smp$n.enfant.cat)
## ------------------------------------------------------------------------
sum(tab)
barplot(prop.table(tab) * 100, ylab="Proportion", col="cornflowerblue", border=NA, ylim=c(0, 30), las=1)
round(prop.table(tab)*100, 1)
tab <- table(smp$n.enfant.cat)
table(smp$n.enfant.cat)
smp$n.enfant.cat <- factor(smp$n.enfant)
levels(smp$n.enfant.cat)[6:13] <- "5+"
nlevels(smp$n.enfant.cat)
table(smp$n.enfant.cat)
tab <- table(smp$n.enfant.cat)
## ------------------------------------------------------------------------
sum(tab)
tab / sum(tab)
## ------------------------------------------------------------------------
prop.table(tab)
## ------------------------------------------------------------------------
round(prop.table(tab), 3)
## ------------------------------------------------------------------------
round(prop.table(tab)*100, 1)
## ------------------------------------------------------------------------
barplot(prop.table(tab) * 100, ylab="Proportion", col="cornflowerblue", border=NA, ylim=c(0, 30), las=1)
## ------------------------------------------------------------------------
hist(smp$age, nclass=8, prob=TRUE, col="cornflowerblue", border="white", xlim=c(0,100), main="", xlab="Âge (années)", ylab="Densité")
lines(density(smp$age, na.rm=TRUE), lwd=2, col="orange")
text(65, 0.025, paste("N =", sum(complete.cases(smp$age))), cex=1.2)
---
smp.c <- read.csv2('/Users/Alexandre/Google Drive/MOOC/R - FUN/smp1.csv')
smp.c <- read.csv2('/Users/Alexandre/Google Drive/MOOC/R - FUN/smp1.csv')
library(prettyR)
describe(smp.c$age)
#6 Coefficient de correlation
#Visualisation des données
plot(jitter(smp.c$age), jitter(smp.c$n.enfant))
#Coefficient de correlation de Pearson
cor(smp.c$age, smp.c$n.enfant, use="complete.obs")
#7 Risque relatif et odds-ratio
#Réencodage de la variable Evitement du Danger (ed)
smp.c$ed.b <- ifelse(smp.c$ed>2,1,0)
str(smp.c)
# Croisement des variables ed (binaire et non binaire)
table(smp.c$ed, smp.c$ed.b, deparse.level=2, useNA="always")
library(Epi)
twoby2(1-smp.c$ed.b, 1-smp.c$dep.cons)
pwd
pwd()
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
install.packages('rstudioapi')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
player <- read.csv('player_data.csv')
player <- read.csv('game_data.csv')
game <- read.csv('game_data.csv')
player <- read.csv('player_data.csv')
head(player)
head(game)
library(dplyr)
install.packages('dplyr')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(dplyr)
head(player)
head(game)
unique(player$Team)
unique(player$Team)
team_player <- unique(player$Team) %>% arrange(Team)
team_player <- unique(player$Team) %>% sort()
team_player
team_game <- unique(game$Team)%>% sort()
team_player
team_game
game$Team[Team == 'Angers SCO'] <- 'Angers'
game$Team[game$Team == 'Angers SCO'] <- 'Angers'
player <- read.csv('player_data 38.csv')
head(game)
team_game <- unique(game$Team)%>% sort()
team_game
team_game
game <- read.csv('game_data.csv')
head(game)
team_game <- unique(game$Team)%>% sort()
team_game
game$Team[game$Team == 'Angers SCO'] <- 'Angers'
head(game)
team_game <- unique(game$Team)%>% sort()
team_game
player <- read.csv('player_data 38.csv',stringsAsFactors=FALSE)
game <- read.csv('game_data.csv',stringsAsFactors=FALSE)
head(player)
team_player <- unique(player$Team) %>% sort()
team_player
head(game)
team_game <- unique(game$Team)%>% sort()
team_game
game$Team[game$Team == 'Angers SCO'] <- 'Angers'
team_game <- unique(game$Team)%>% sort()
team_game
replace <- function(A,B) {
game$Team[game$Team == A] <- B
}
team_player
replace('AS Monaco','Monaco')
team_game <- unique(game$Team)%>% sort()
team_game
game <- replace('AS Monaco','Monaco')
team_game <- unique(game$Team)%>% sort()
game <- read.csv('game_data.csv',stringsAsFactors=FALSE)
head(game)
head(game)
team_game <- unique(game$Team)%>% sort()
team_game
team_player
